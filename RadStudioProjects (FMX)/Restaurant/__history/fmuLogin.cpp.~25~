//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "fmuLogin.h"
#include "dmu.h"
#include "fmu.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
Tfmulog *fmulog;
//---------------------------------------------------------------------------
__fastcall Tfmulog::Tfmulog(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall Tfmulog::btnCloseClick(TObject *Sender)
{
	Close();
}
//---------------------------------------------------------------------------
void __fastcall Tfmulog::btnEnterClick(TObject *Sender)
{
// Найти запись в таблице roles по введенному логину

	// Вернуть пароль и id доступа
	role = dm->Access->Lookup("Login", edLogin->Text, "Password; RoleID; AccessID");

	// Если записи нет, в role попадет null
	if (!role.IsNull()) {

		UnicodeString pass = role.GetElement(0);
        Fullname = role.GetElement(2);

		// считываем пароль в строку

		// Сравниваем полученный пароль с введенным в (поле пароля)
		if (pass == edPass->Text) {

			level = role.GetElement(1); // уровень доступа
			fmulog->Hide();
			fm->Show();
			switch (level) {
			case 1:	
				fm->tbGeneral->ActiveTab = fm->tbMain;
				break;
			case 2:
				fm->tbGeneral->ActiveTab = fm->tbMain;
				break;
			case 3:
				fm->tbGeneral->ActiveTab = fm->tbMain;
				break;
			}

		}
		else {
			ShowMessage(L"Пользователь не найден");
		}
	}
	else {
		ShowMessage(L"Пользователь не найден");
	}

}
//---------------------------------------------------------------------------

void __fastcall Tfmulog::FormShow(TObject *Sender)
{
	dm->Connect();
}
//---------------------------------------------------------------------------

